name: Creación de nueva release
#on: [workflow_dispatch]
on:
  push:
    branches: [ main ]
env:
  REMOTE_BRANCH: release
  REGISTRY: ghcr.io

jobs:
  create-tag-release:
    name: Creación del nuevo tag y release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.value }}
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Descarga del fichero de versión
        run: wget https://raw.githubusercontent.com/TaixMiguel/Congatudo/${{ env.REMOTE_BRANCH }}/package.json

      - uses: sergeysova/jq-action@v2
        name: Obtención de la versión
        id: version
        with:
          cmd: 'jq .version package.json -r'
          
      - name: Control fichero de matriz existente
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "matrix-platforms-docker.json"

      - name: Descarga de la matriz externa
        if: steps.check_files.outputs.files_exists == 'false'
        run: wget --output-document=matrix-platforms-docker.json https://raw.githubusercontent.com/TaixMiguel/Congatudo/${{ env.REMOTE_BRANCH }}/matrix.json

      - name: Obtención de la matriz de plataformas Docker
        id: matrix
        run: echo "matrix=$(jq -c . matrix-platforms-docker.json)" >> $GITHUB_OUTPUT

#      - uses: rickstaa/action-create-tag@v1
#        name: Creación del tag
#        with:
#          tag: ${{ steps.version.outputs.value }}
#          message: Tag ${{ steps.version.outputs.value }}

#      - name: Creación de la release
#        uses: actions/create-release@latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ steps.version.outputs.value }}
#          release_name: ${{ steps.version.outputs.value }}
#          draft: false
#          prerelease: false

  build-packages:
    name: Generación del paquete asociado a la release
    needs: create-tag-release
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.create-tag-release.outputs.matrix) }}
    steps:      
      - name: Inicio de sesión Docker
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Construcción y subida de la imagen (amd64)
        uses: docker/build-push-action@v3
        with:
          push: false
          tags: |
            ${{ env.REGISTRY }}/taixmiguel/congatudo-test:${{ matrix.image_name }}-${{ needs.create-tag-release.outputs.version }}
            ${{ env.REGISTRY }}/taixmiguel/congatudo-test:${{ matrix.image_name }}-dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            "BUILD_FROM=${{ matrix.build_from }}"
            "PKG_TARGET=${{ matrix.pkg_target }}"
            "PKG_OPTIONS=${{ matrix.pkg_options }}"
      - name: Push
        run: |
          docker push ${{ env.REGISTRY }}/taixmiguel/congatudo-test:${{ matrix.image_name }}-${{ needs.create-tag-release.outputs.version }}
          docker push ${{ env.REGISTRY }}/taixmiguel/congatudo-test:${{ matrix.image_name }}-dev
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
